@page "/users/{id}"
@using TaskLauncher.Api.Contracts.Responses
@using TaskLauncher.App.Client.Components.Graphs
@attribute [Authorize(Policy = "admin-policy")]

<SpinLoader IsLoading="@(loading)" Spinner="SpinnerType.Circle">
    <ContentTemplate>

        <div class="container">
            <div class="row">

                <ProfileComponent User=User ReadOnly="true" />

                @if (User.Blocked.HasValue && User.Blocked.Value)
                {
                    <button class="btn btn-success" style="width:130px; margin: 10px" @onclick="UnBanUserAsync">Unban user</button>
                }
                else
                {
                    <button class="btn btn-danger" style="width:130px; margin: 10px" @onclick="BanUserAsync">Ban user</button>
                }

                @if (User.Vip)
                {
                    <button class="btn btn-danger" style="width:130px; margin: 10px" @onclick="UnVipAsync">Take off vip</button>
                }
                else
                {
                    <button class="btn btn-success" style="width:130px; margin: 10px" @onclick="VipAsync">Give vip</button>
                }

                <div class="form-group" style="margin-top:10px; margin-bottom:10px">
                    <div class="input-group align-items-md-center">
                        <RadzenLabel Text="Update token balance" style="margin-right: 10px" />
                        <RadzenNumeric ReadOnly="userIsNotVerifiedOrRegistered" TValue="int" Min="0" Max="1000" @bind-Value="@tokenBalance" style="max-width: 200px; margin-right: 10px" Class="w-100" />
                        <div style="margin-left: 2px; vertical-align:central; display:block">
                            <button disabled="@userIsNotVerifiedOrRegistered" class="btn btn-block btn-success" @onclick="UpdateBalance">
                                <span class="oi oi-pencil" aria-hidden="true"></span>
                            </button>
                        </div>
                    </div>
                </div>

            </div>

            @if (User.Registered)
            {
                <div class="card">
                    <div class="card-body">
                        <div class="row">
                            <RadzenTabs TabPosition="TabPosition.Top" style="max-width: 1500px;" RenderMode="TabRenderMode.Client">
                                <Tabs>
                                    <RadzenTabsItem Text="Bans">
                                        <BanComponent @ref="banComponent" UserId="@User.UserId" />
                                    </RadzenTabsItem>
                                    <RadzenTabsItem Text="Payments">
                                        <PaymentsComponent UserId="@User.UserId" />
                                    </RadzenTabsItem>
                                    <RadzenTabsItem Text="Tasks">
                                        <TaskComponent UserId="@User.UserId" />
                                    </RadzenTabsItem>
                                    <RadzenTabsItem Text="Stats">
                                        <div class="container">
                                            <div class="row">
                                                <div class="col-md-6">
                                                    <DonutGraph UserId=@Id />
                                                </div>
                                                <div class="col-md-6">
                                                    <ColumnGraph UserId=@Id />
                                                </div>
                                            </div>
                                        </div>
                                    </RadzenTabsItem>
                                </Tabs>
                            </RadzenTabs>
                        </div>
                    </div>
                </div>
            }
        </div>

    </ContentTemplate>
</SpinLoader>