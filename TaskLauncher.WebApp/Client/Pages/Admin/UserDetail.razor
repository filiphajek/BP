@page "/users/{id}"
@using TaskLauncher.Api.Contracts.Responses
@attribute [Authorize(Policy = "admin-policy")]

<SpinLoader IsLoading="@(loading)" Spinner="SpinnerType.Circle">
    <ContentTemplate>

        <ProfileComponent User=User />

        <a href="@User.UserId/tasks" style="margin-right: 10px" class="btn btn-info">Show users tasks</a>

        @if (User.Blocked.HasValue && User.Blocked.Value)
        {
            <button class="btn btn-success" style="margin: 10px" @onclick="UnBanUserAsync">Unban user</button>
        }
        else
        {
            <button class="btn btn-danger" style="margin: 10px" @onclick="BanUserAsync">Ban user</button>
        }

        @if (User.Vip)
        {
            <button class="btn btn-danger" style="margin: 10px" @onclick="UnVipAsync">Take off vip</button>
        }
        else
        {
            <button class="btn btn-success" style="margin: 10px" @onclick="VipAsync">Give vip</button>
        }


        <RadzenTabs TabPosition="TabPosition.Top" style="height: 504px; width: 700px;" RenderMode="TabRenderMode.Client">
            <Tabs>
                <RadzenTabsItem Text="Bans">
                    <GridComponent T="BanResponse" Grid="@banGrid"></GridComponent>
                </RadzenTabsItem>
                <RadzenTabsItem Text="Payments">
                    <GridComponent T="PaymentResponse" Grid="@paymentGrid"></GridComponent>
                </RadzenTabsItem>
            </Tabs>
        </RadzenTabs>

    </ContentTemplate>
</SpinLoader>