@page "/tasks/{id:guid}"
@using TaskLauncher.Common.Enums
@attribute [Authorize]

<SpinLoader IsLoading="@(isLoading)" Spinner="SpinnerType.Circle">
    <ContentTemplate>
        <h1>@Task.Name</h1>
        <p>@Task.Description</p>

        <span>
            Status: @Task.ActualStatus &nbsp;
            @if (Task.ActualStatus != TaskState.Finished && Task.ActualStatus != TaskState.Created)
            {
                 <span>
                     <span class="spinner-border spinner-border-sm mr-1"></span>
                 </span>
            }
        </span>

        <br />

        @if(Task.ActualStatus == TaskState.Finished || Task.ActualStatus == TaskState.Archived || Task.ActualStatus == TaskState.Downloaded)
        {
            <button @onclick="DownloadResultFile" disabled="@isRunning" class="btn btn-primary">Download result</button>
        }
        <button @onclick="CancelTask" class="btn btn-danger"> @(Task.ActualStatus == TaskState.InQueue ? "Dequeue" : "Cancel") and restart</button>

        @if (message != "")
        {
            <p>@message</p>
        }

        <br />

        <p><b>History</b></p>
        @foreach (var book in Task.Events)
        {
            <p>Status changed to <b>@book.Status</b> at <b>@book.Time</b></p>
        }

    </ContentTemplate>
</SpinLoader>

